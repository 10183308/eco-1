CURSOR
------
Put the cursor as node in the AST and move it from one token to another. This
way it possible to use the arrow keys even when we have non-textual nodes with
odd sizes

Also allows to draw BOS/EOS (shows language box boundaries) without interfering with cursor movement

LANGUAGE BOXES
--------------
Rethink how to make them visible

ALTER GRAMMARS ON THE FLY
-------------------------
adding whitespace rules
adding language box tokens
use extract from grammar
    reuse stategraph if possible (avoid unneccesary rebuilding)
    e.g. not starting at state0 but at stateX (state of Nonterminals first appearance)

SAVING/LOADING
--------------
Rethink parse tree and language box tokens and their pointers in the editor to simplify saving/loading

VISUALIZATION
-------------
Make each node draw itself and return its height/width to the editor

- dynamic line height
- unicode identifiers
- math views

GRAMMAR COMBINATION AND EXTRACTION
----------------------------------

Example: expression ::= bla <SQL:where_clause> # reference SQL but start at 'where_clause'

GAMMARS:

- Eifel
- Pascal
- Go
- JavaScript (Lukas)
- HTML (Lukas)
- XML (Krish)
- CSS (Krish)

MAKE PARSE TREE INDEPENDENT FROM INC PARSER
-------------------------------------------
Possible to switch inc parser on the fly and parse the current parse tree with it
