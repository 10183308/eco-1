===========================================================================
  Eco: An Editor for Language Composition
===========================================================================

Eco is a prototype editor for editing composed languages. It is not feature
complete, it is not intended for production, and it does have bugs. Eco is
distributed on a BSD/MIT license.

Dependencies:

- python2.7
- pydot & graphviz
- pyqt4

Installation:

1) Checkout Eco from https://bitbucket.org/softdevteam/eco
2) cd eco/
3) ./bin/eco

Tutorial:

0)
Download <insert link to database file here>

1)
Eco is a language aware editor. When creatig a new file we need to specifiy in
which language we want to program. Select "File->New" and choose
"HTML + Python + SQL" from the list of languages.

2)
We are writing HTML. Type in the following:

    <html>
    <head>
    <body>
    </body>
    </head>

Eco attempts to parse the program on every keystroke. The parse tree can be
inspected by clicking "View->Tree" and ticking the checkbox "Show tree". Note
that leaving this checked will redraw the parse tree on every keystroke using
graphviz which becomes quite slow quickly. At the moment our program is still
unvalid as shown by the red squiggly line. Let's fix the program by closing the
<html> tag.

Type:

    </html>

3)
Now we are going to add Python into our HTML program. The grammar we loaded
allows for composition of HTML, Python and SQL. Specifically HTML allows Python
code whereever it allows html-tags. Move your cursor right after "<head>" and
hit ENTER.

Now hit CTRL+L (or select Edit->Add language box from the menu). From the popup
menu select "Python + HTML + SQL".  Then type:

    import sqlite3
    c = sqlite3.connect("<path-to-sqlfile>")

We just created a language box inside of HTML containing Python code. Let's
create another one.

4)
Move you cursor right after "<body>" hit ENTER and open up the language menu
again by hitting CTRL+L. Again select "Python + HTML + SQL" from the list and
then type:

    for n in db:
        print html, n

In this code "db" and "html" are palceholders that we are going to replace with
further language boxes.

5)
Delete the variable "db", create a new language box using "SQL" and then type:

    SELECT name FROM people

Afterwards delete the variable "html" and replace it with a language box "HTML"
and type:

    <li>

6)
Your code now should look somewhat like this:

    <html>
    <head>
    import sqlite3
    c = sqlite3.connect("<path-to-sqlfile>")
    </head>
    <body>
    for n, in SELECT name FROM people:
    print <li>, n
    </body>
    </html>

7)
Now we can export our program using "File->Export" and saving it as "web.py".
Afterwards we can run it:

    python2.7 web.py > web.html

Opening the resulting file "web.html" in a browser should now list people from
our sql database.

More details at http://soft-dev.org/
